// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_STRUCT_SOULMETERFBS_HISTORY_H_
#define FLATBUFFERS_GENERATED_STRUCT_SOULMETERFBS_HISTORY_H_

#include "flatbuffers/flatbuffers.h"

namespace SoulMeterFBS {
namespace History {

struct _tIntDoubleList;
struct _tIntDoubleListBuilder;

struct _tIntDoubleList FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef _tIntDoubleListBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT__F = 4,
    VT__S = 6
  };
  uint32_t _f() const {
    return GetField<uint32_t>(VT__F, 0);
  }
  const flatbuffers::Vector<double> *_s() const {
    return GetPointer<const flatbuffers::Vector<double> *>(VT__S);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<uint32_t>(verifier, VT__F) &&
           VerifyOffset(verifier, VT__S) &&
           verifier.VerifyVector(_s()) &&
           verifier.EndTable();
  }
};

struct _tIntDoubleListBuilder {
  typedef _tIntDoubleList Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add__f(uint32_t _f) {
    fbb_.AddElement<uint32_t>(_tIntDoubleList::VT__F, _f, 0);
  }
  void add__s(flatbuffers::Offset<flatbuffers::Vector<double>> _s) {
    fbb_.AddOffset(_tIntDoubleList::VT__S, _s);
  }
  explicit _tIntDoubleListBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<_tIntDoubleList> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<_tIntDoubleList>(end);
    return o;
  }
};

inline flatbuffers::Offset<_tIntDoubleList> Create_tIntDoubleList(
    flatbuffers::FlatBufferBuilder &_fbb,
    uint32_t _f = 0,
    flatbuffers::Offset<flatbuffers::Vector<double>> _s = 0) {
  _tIntDoubleListBuilder builder_(_fbb);
  builder_.add__s(_s);
  builder_.add__f(_f);
  return builder_.Finish();
}

inline flatbuffers::Offset<_tIntDoubleList> Create_tIntDoubleListDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    uint32_t _f = 0,
    const std::vector<double> *_s = nullptr) {
  auto _s__ = _s ? _fbb.CreateVector<double>(*_s) : 0;
  return SoulMeterFBS::History::Create_tIntDoubleList(
      _fbb,
      _f,
      _s__);
}

}  // namespace History
}  // namespace SoulMeterFBS

#endif  // FLATBUFFERS_GENERATED_STRUCT_SOULMETERFBS_HISTORY_H_
